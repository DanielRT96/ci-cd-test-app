version: 2.1

aliases:
  - &restore-cache
    restore_cache:
      key: npm-{{ checksum "package.json" }}

  - &npm-install
    run:
      name: Install test dependencies
      command: npm install

  - &save-cache
    save_cache:
      key: npm-{{ checksum "package.json" }}
      paths:
        - ~/repo/node_modules

  - &only-main
    branches:
      only:
        - main

  - &ignore-main
    branches:
      ignore:
        - main

orbs:
  node: circleci/node@2.0.3

jobs:
  lint:
    docker:
      - image: cimg/node:18.2.0
    working_directory: ~/repo
    steps:
      - checkout
      - *restore-cache
      - *npm-install
      - *save-cache
      - run: npm run lint
  test:
    docker:
      - image: cimg/node:18.2.0
    working_directory: ~/repo
    steps:
      - checkout
      - *restore-cache
      - *npm-install
      - *save-cache
      - run: npm run test
  build:
    docker:
      - image: cimg/node:18.2.0
    working_directory: ~/repo
    steps:
      - checkout
      - *restore-cache
      - *npm-install
      - *save-cache
      - run: npm run build
  deploy-heroku:
    docker:
      - image: cimg/python:3.10.4
    working_directory: ~/repo
    environment:
      HEROKU_APP_NAME: 'guarded-escarpment-80478'
    steps:
      - checkout
      - run:
          name: Setup Heroku
          command: bash .circleci/setup-heroku.sh

      - run:
          name: Push to Heroku
          command: |
            git push heroku main
  deploy-aws:
    docker:
      - image: cimg/python:3.10
    steps:
      - checkout
      - run: pip3 --version
      - run:
          working_directory: ~/repo
          name: installing ebcli
          command: pip3 install awsebcli --upgrade --user
      - run: eb --version
      - run:
          name: deploying with awsebcli
          command: eb deploy  test-app-$CIRCLE_BRANCH

workflows:
  lint-test-build:
    jobs:
      - lint:
          filters: *ignore-main
      - test:
          filters: *ignore-main
      - build:
          requires:
            - lint
            - test
          filters: *ignore-main

  deploy-heroku:
    jobs:
      - lint:
          filters: *only-main
      - test:
          filters: *only-main
      - build:
          requires:
            - lint
            - test
          filters: *only-main
      - deploy-heroku:
          requires:
            - build
          filters: *only-main

  deploy-aws:
    jobs:
      - lint:
          filters: *only-main
      - test:
          filters: *only-main
      - build:
          requires:
            - lint
            - test
          filters: *only-main
      - deploy-aws:
          context: aws-creds
          requires:
            - build
          filters: *only-main
